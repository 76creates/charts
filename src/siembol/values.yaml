# -----------------------------------------------------------------------------
# Alerting parameters
# -----------------------------------------------------------------------------

alerting:
  deploy:
    topology:
      name: alerting-deploy-topology
      image:
        repository: gresearchdev/siembol-alerting-storm
        tag: latest
        pullPolicy: Always
    rules:
      name: alerting-deploy-rules


# -----------------------------------------------------------------------------
# ZooKeeper parameters
# -----------------------------------------------------------------------------


zookeeper:
  enabled: false # disable Siembol's ZooKeeper in favor of an external ZK
  servers: "ext-zk-zookeeper"
  image:
    registry: docker.io
    repository: bitnami/zookeeper
    tag: 3.7.0-debian-10-r0
    pullPolicy: Always

# -----------------------------------------------------------------------------
# Storm parameters
# -----------------------------------------------------------------------------

storm:
  zookeeper:
    enabled: false # disable Kafka's ZooKeeper in favor of an external ZK
    servers: "ext-zk-zookeeper"
  ingress:
    enabled: true
    hostname: storm.siembol.local

# -----------------------------------------------------------------------------
# Kafka parameters
# -----------------------------------------------------------------------------

kafka:
  persistence:
    enabled: false
  zookeeper:
    enabled: false # disable Kafka's ZooKeeper in favor of an external ZK
  externalZookeeper:
    servers: "ext-zk-zookeeper"


# -----------------------------------------------------------------------------
# general seimbol parameters
# -----------------------------------------------------------------------------

# Enable TLS via certmanager
tls:
  enabled: true

# -----------------------------------------------------------------------------
# config-editor-rest parameters
# -----------------------------------------------------------------------------
rest:
  image: 
    repository: "gresearchdev/siembol-config-editor-rest"
    tag: "latest"
    pullPolicy: Always

  appName: "config-editor-rest"
  applicationProperties: "resources/application.properties"
  gitConfig: "resources/git.config"
  mountPath: "/opt/config-editor-rest"

  ingress:
    enabled: true
    hostname: rest.siembol.local


# -----------------------------------------------------------------------------
# config-editor-ui parameters
# -----------------------------------------------------------------------------
ui:
  image: 
    repository: "gresearchdev/siembol-config-editor-ui"
    tag: "latest"
    pullPolicy: Always

  # Specify basic configuration details for Siembol
  serviceName: config-editor-ui

  # Run with an ingress
  ingress:
    enabled: true
    hostname: ui.siembol.local


# -----------------------------------------------------------------------------
# storm-topology-manager parameters
# -----------------------------------------------------------------------------
manager:
  appName: "storm-topology-manager"
  serviceAccount: "storm-topology-manager"
  image: 
    repository: "gresearchdev/siembol-storm-topology-manager"
    tag: "latest"
    pullPolicy: Always

  applicationProperties: "resources/application.manager.properties"
  stormSubmit: "resources/storm-submit.yaml"
  mountPath: "/opt/storm-topology-manager"

  # Run with an ingress
  ingress:
    enabled: true
    hostname: manager.siembol.local




# -----------------------------------------------------------------------------
# Example app to run
# -----------------------------------------------------------------------------
example:
  enabled: true
  
  # -----------------------------------------------------------------------------
  # Log generator script
  # -----------------------------------------------------------------------------
  image: 
    repository: "python"
    tag: "slim"
    pullPolicy: Always
  mountPath: "/opt/log-generator-example"
  script: "resources/logger.py"
  requirements: "resources/requirements.txt"

  # -----------------------------------------------------------------------------
  # Kafka UI - helps visualize the example
  # -----------------------------------------------------------------------------
  kafka:
    ui:
      appName: kafka-ui
      enabled: true
      hostname: kafka-ui.siembol.local
      image: 
        repository: provectuslabs/kafka-ui
        tag: latest   
  appName: "log-generator-example"
